---
import Layout from '../layouts/Layout.astro';
import { getAllEpisodes } from '../lib/episodes';

const episodes = await getAllEpisodes();
const totalFacts = episodes.reduce((sum, ep) => sum + ep.facts.length, 0);
---

<Layout>
	<main>
		<div class="container">
			<header class="header">
				<h1>üêü No Such Thing As A Fish</h1>
				<p class="subtitle">Facts Database & Episode Browser</p>
				<div class="stats">
					<span>{episodes.length} Episodes</span>
					<span>‚Ä¢</span>
					<span>{totalFacts} Facts</span>
				</div>
			</header>

			<section class="episodes">
				<h2>Episodes</h2>
				{episodes.length === 0 ? (
					<p class="no-data">No episodes processed yet. Run <code>npm run process</code> to get started.</p>
				) : (
					<div class="episode-grid">
						{episodes.map((episode) => (
							<a href={`/episodes/${episode.metadata.dirName}`} class="episode-card">
								<div class="episode-type">{episode.episode_type}</div>
								<h3>{episode.episode_title}</h3>
								{episode.episode_number && episode.episode_number !== "unknown" && (
									<div class="episode-number">Episode {episode.episode_number}</div>
								)}
								<p class="episode-summary">{episode.episode_summary}</p>
								<div class="episode-meta">
									<span>{episode.facts.length} facts</span>
									<span>‚Ä¢</span>
									<span>{new Date(episode.metadata.publishDate).toLocaleDateString()}</span>
								</div>
							</a>
						))}
					</div>
				)}
			</section>
		</div>
	</main>
</Layout>

<style>
	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 2rem;
	}

	.header {
		text-align: center;
		margin-bottom: 3rem;
	}

	h1 {
		font-size: 3rem;
		margin-bottom: 0.5rem;
		color: #1a1a1a;
	}

	.subtitle {
		font-size: 1.25rem;
		color: #666;
		margin-bottom: 1rem;
	}

	.stats {
		display: flex;
		gap: 0.5rem;
		justify-content: center;
		color: #888;
		font-size: 0.9rem;
	}

	.episodes h2 {
		font-size: 2rem;
		margin-bottom: 1.5rem;
	}

	.no-data {
		text-align: center;
		padding: 3rem;
		color: #666;
	}

	.no-data code {
		background: #f0f0f0;
		padding: 0.2rem 0.5rem;
		border-radius: 3px;
		font-family: monospace;
	}

	.episode-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
		gap: 1.5rem;
	}

	.episode-card {
		display: block;
		padding: 1.5rem;
		background: white;
		border: 1px solid #e0e0e0;
		border-radius: 8px;
		text-decoration: none;
		color: inherit;
		transition: transform 0.2s, box-shadow 0.2s;
	}

	.episode-card:hover {
		transform: translateY(-2px);
		box-shadow: 0 4px 12px rgba(0,0,0,0.1);
	}

	.episode-type {
		display: inline-block;
		padding: 0.25rem 0.75rem;
		background: #e3f2fd;
		color: #1976d2;
		border-radius: 12px;
		font-size: 0.75rem;
		text-transform: uppercase;
		font-weight: 600;
		margin-bottom: 0.75rem;
	}

	.episode-card h3 {
		font-size: 1.25rem;
		margin-bottom: 0.5rem;
		color: #1a1a1a;
	}

	.episode-number {
		font-size: 0.9rem;
		color: #666;
		margin-bottom: 0.5rem;
	}

	.episode-summary {
		color: #555;
		font-size: 0.9rem;
		line-height: 1.5;
		margin-bottom: 1rem;
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}

	.episode-meta {
		display: flex;
		gap: 0.5rem;
		font-size: 0.85rem;
		color: #888;
	}

	main {
		min-height: 100vh;
		background: linear-gradient(to bottom, #f8f9fa, #ffffff);
	}
</style>