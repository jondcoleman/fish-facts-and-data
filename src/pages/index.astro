---
import Layout from '../layouts/Layout.astro';
import { getAllEpisodes } from '../lib/episodes';

const episodes = await getAllEpisodes();
const totalFacts = episodes.reduce((sum, ep) => sum + ep.facts.length, 0);
---

<Layout>
	<main>
		<div class="container">
			<header class="header">
				<h1>üêü No Such Thing As A Fish</h1>
				<p class="subtitle">Timestamps for facts in each standard episode</p>
				<div class="stats">
					<span>{episodes.length} Episodes</span>
					<span>‚Ä¢</span>
					<span>{totalFacts} Facts</span>
				</div>
			</header>

			<section class="episodes">
				<h2>Episodes</h2>
				{episodes.length === 0 ? (
					<p class="no-data">No episodes processed yet. Run <code>npm run process</code> to get started.</p>
				) : (
					<>
						<div class="legend">
							<span class="legend-item">
								<span class="has-facts-icon">4</span> = Facts extracted with timestamps
							</span>
						</div>
						<div class="episode-list">
						{episodes.map((episode) => {
							const hasFacts = episode.facts.length === 4 &&
								episode.facts.every(f => f.start_time && f.start_time !== "unknown");
							return (
								<a href={`/episodes/${episode.metadata.dirName}`} class="episode-row">
									<span class="title-text">{episode.metadata.title}</span>
									<span class="has-facts">{hasFacts ? '4' : ''}</span>
									<span class="date">{new Date(episode.metadata.publishDate).toLocaleDateString()}</span>
								</a>
							);
						})}
						</div>
					</>
				)}
			</section>
		</div>
	</main>
</Layout>

<style>
	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 2rem;
	}

	.header {
		text-align: center;
		margin-bottom: 3rem;
	}

	h1 {
		font-size: 3rem;
		margin-bottom: 0.5rem;
		color: #1a1a1a;
	}

	.subtitle {
		font-size: 1.25rem;
		color: #666;
		margin-bottom: 1rem;
	}

	.stats {
		display: flex;
		gap: 0.5rem;
		justify-content: center;
		color: #888;
		font-size: 0.9rem;
	}

	.episodes h2 {
		font-size: 2rem;
		margin-bottom: 1rem;
	}

	.legend {
		margin-bottom: 1rem;
		padding: 0.75rem 1rem;
		background: #1a1a1a;
		border: 1px solid #333333;
		border-radius: 8px;
		font-size: 0.85rem;
		color: #cccccc;
	}

	.legend-item {
		display: inline-flex;
		align-items: center;
		gap: 0.5rem;
	}

	.has-facts-icon {
		color: #FFD700;
		font-weight: 700;
		font-size: 1rem;
	}

	.no-data {
		text-align: center;
		padding: 3rem;
		color: #666;
	}

	.no-data code {
		background: #f0f0f0;
		padding: 0.2rem 0.5rem;
		border-radius: 3px;
		font-family: monospace;
	}

	.episode-list {
		display: flex;
		flex-direction: column;
		gap: 0;
		border: 1px solid #e0e0e0;
		border-radius: 8px;
		overflow: hidden;
		background: white;
	}

	.episode-row {
		display: grid;
		grid-template-columns: 1fr 2rem 6rem;
		align-items: center;
		padding: 0.75rem 1rem;
		text-decoration: none;
		color: inherit;
		border-bottom: 1px solid #2a2a2a;
		transition: background 0.15s;
		gap: 1rem;
	}

	.episode-row:last-child {
		border-bottom: none;
	}

	.episode-row:hover {
		background: #2a2a2a;
	}

	.episode-title {
		min-width: 0;
	}

	.title-text {
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
		display: block;
	}

	.has-facts {
		color: #FFD700;
		font-weight: 700;
		font-size: 1rem;
		text-align: center;
		min-width: 1rem;
	}

	.date {
		color: #888888;
		white-space: nowrap;
		font-size: 0.85rem;
		text-align: right;
	}

	/* Mobile layout */
	@media (max-width: 768px) {
		.episode-row {
			grid-template-columns: 1fr auto;
			grid-template-rows: auto auto;
			padding: 1rem;
			gap: 0.5rem 1rem;
		}

		.title-text {
			white-space: normal;
			line-height: 1.4;
			grid-column: 1;
			grid-row: 1 / 3;
			align-self: start;
		}

		.has-facts {
			grid-column: 2;
			grid-row: 1;
			align-self: start;
		}

		.date {
			grid-column: 2;
			grid-row: 2;
			align-self: end;
			font-size: 0.8rem;
		}

		.legend {
			font-size: 0.8rem;
			padding: 0.5rem 0.75rem;
		}

		.container {
			padding: 1rem;
		}

		h1 {
			font-size: 2rem;
		}

		.episodes h2 {
			font-size: 1.5rem;
		}
	}

	main {
		min-height: 100vh;
		background: #000000;
		color: #ffffff;
	}

	h1, h2 {
		color: #FFD700;
	}

	.subtitle {
		color: #cccccc;
	}

	.stats {
		color: #999999;
	}

	.episode-list {
		background: #1a1a1a;
		border: 1px solid #333333;
	}

	.episode-row {
		border-bottom: 1px solid #2a2a2a;
	}

	.episode-row:hover {
		background: #2a2a2a;
	}

	.episode-number {
		color: #FFD700;
		font-weight: 700;
	}

	.title-text {
		color: #ffffff;
	}

	.type-badge {
		background: #333333;
		color: #cccccc;
	}

	.fact-count, .date {
		color: #888888;
	}
</style>